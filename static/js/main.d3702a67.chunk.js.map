{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selected","onChange","event","filter","target","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","toString","selectedOption","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","formOpen","setFormOpen","formHandler","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","NewExpense","enteredExpenseData","random","onNewExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3702a67.chunk.js","sourcesContent":["import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import './Card.css';\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className;\n    \n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport { useState } from \"react\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">Â£{props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  \n  const filterInput = (event) => {\n    props.filter(event.target.value);\n    \n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterInput}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n\n  if (props.items.length === 0) {\n    return  <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>\n  }\n\n  return (\n  <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ))}\n  </ul>\n  )\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight}}\n        ></div>\n      </div>\n      <div className=\"chart-name__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\nconst totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpenseChart\";\n\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n  const items = props.items;\n  const filterHandler = (selectedOption) => {\n    setSelectedYear(selectedOption);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear}\n  );\n\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={selectedYear} filter={filterHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [formOpen, setFormOpen] = useState(false);\n\n  const formHandler = () => {\n    setFormOpen(!formOpen);\n  }\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    setEnteredTitle(\"\");\n  };\n\n  return (\n    <div>\n      {formOpen === true ? \n     <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n      <button type=\"submit\" onClick={formHandler}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form> : <div><button type=\"submit\" onClick={formHandler}>Add Expense</button></div>}\n    </div>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n    const onSaveExpenseDataHandler = (enteredExpenseData) =>{\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n        props.onNewExpense(expenseData);\n    };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler}/>\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"New Sofa\",\n    amount: 850,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n  {\n    id: \"e5\",\n    title: \"New Chair\",\n    amount: 225,\n    date: new Date(2020, 1, 19),\n  },\n  {\n    id: \"e6\",\n    title: \"Games Console\",\n    amount: 550,\n    date: new Date(2022, 1, 28),\n  },\n  {\n    id: \"e7\",\n    title: \"A Book\",\n    amount: 10,\n    date: new Date(2019, 3, 11),\n  },\n  {\n    id: \"e8\",\n    title: \"Stationery\",\n    amount: 18,\n    date: new Date(2019, 9, 22),\n  },\n  {\n    id: \"e9\",\n    title: \"New Lamp\",\n    amount: 125,\n    date: new Date(2020, 4, 19),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const newExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...expenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onNewExpense={newExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}